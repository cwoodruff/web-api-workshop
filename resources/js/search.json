[[{"l":"Workshop Home","p":["For the source code for the workshop visit the ASP.NET 7 Web API Workshop GitHub repo.","Interested in learning about designing, architecting and developing Web APIs using ASP.NET 7?","Ask me about doing a workshop. My email is cwoodruff@live.com."]}],[{"l":"Required Technologies for the Workshop","p":["Tech","Where to download",".NET 7","Download","SQL Server","Postman"]}],[{"i":"installing-net-7-and-aspnet-7","l":"Installing .NET 7 and ASP.NET 7","p":["This page will instruct you how to download and install the .NET 7 SDK that includes ASP.NET 7 Web API.","First, download the .NET SDK on your computer."]},{"l":"Installing the SDK for .NET 7","p":["Next install the .NET SDK on your computer.","Next, open a terminal such as PowerShell, Command Prompt, or bash. Enter the following dotnet commands to verify that .NET 7 has been installed:","You see the .NET 7 SDK version as one of the outputs:","Congratulations! You're ready to create your first ASP.NET Web API."]},{"l":"Next steps","p":["If you need some introduction to developing .NET applications, you can following the step-by-step tutorial or by watching .NET 101 videos on YouTube."]}],[{"l":"Installing and Setting Up SQL Server 2022","p":["Go to the Try SQL Server 2022 page and download the Developer version. Install locally."]},{"l":"Creating the Chinook database in MSSQL 2022","p":["Get the Chinook database for this workshop in the GitHub repo. The file is a BAK backup so we will restore it to where you have MSSQL 2022 installed.","It contains all data for the workshop and will be the starting point for the learning.","Use SQL Server Management Studio to restore the database."]}],[{"l":"Installing and Setting Up SQL Server 2019 in Docker"}],[{"l":"Installing and Setting Up Postman","p":["Download and install Postman for labs."]}],[{"l":"Introduction to the Workshop"}],[{"i":"what-is-a-api","l":"What is a API?","p":["In computer programming, an application programming interface (API) is a set of subroutine definitions, protocols, and tools for building software and applications."]},{"i":"so-what-is-a-web-api","l":"So what is a Web API?","p":["Ideal for building RESTful services","Supports HTTP","Uses HTTP Requests and Responses","Maps to HTTP verbs","Types of Web Services"]}],[{"i":"what-is-rest","l":"What is REST?"},{"l":"What you need to know about HTTP","p":["HTTP Methods or Verbs","Request Header","Request Body","Response Codes","Response Header","Response Body"]}],[{"i":"your-first-aspnet-7-web-api","l":"Your First ASP.NET 7 Web API"},{"i":"create-a-new-aspnet-core-web-api-solution-and-project","l":"Create a new ASP.NET Core Web API solution and project"},{"l":"Configure the Solution and API Project for Workshop","p":["Solution name is Chinook","Project name is Chinook.API"]},{"l":"Set Details for the Solution and API Project","p":["Target Framework is .NET 7.0","Authentication Type is None","Set Configure for HTTPS to True","Set Enable Docker to False","Set Enable OpenAPI support to False"]},{"l":"A View of the Solution and API Project"},{"l":"Results when you run the API Project","p":["Note-- I use a JSON Formatter in Chrome to make the Results look good."]},{"l":"Delete the Existing Files in API Project","p":["Delete the following files in API project:","WeatherForcastController.cs","WeatherForcast.cs"]}],[{"l":"Designing the NTier API"},{"i":"start-from-previous-modules-end","l":"START FROM PREVIOUS MODULE'S END","p":["Your First ASP.NET 7 Web API"]},{"l":"CREATE NEW PROJECTS FOR DATA AND DOMAIN"}],[{"l":"Developing the API Data access"},{"i":"start-from-previous-modules-end","l":"START FROM PREVIOUS MODULE'S END","p":["Designing the NTier API"]},{"l":"ADD PROJECT REFERENCE FOR API PROJECT"},{"l":"ADD PROJECT REFERENCE FOR DATA PROJECT"},{"l":"INSTALL OR UPDATE THR EF CORE CLI"},{"l":"ADD NUGET PACKAGES TO DATA PROJECT"},{"l":"SCAFFOLD DBCONTEXT AND ENTITIES FROM CHINOOK DATABASE IN DATA PROJECT","p":["Run the following command in Developer Command Prompt inside the Data project"]},{"l":"MOVE ENTITIES IN DATA PROJECT TO DOMAIN","p":["Adjust the namespace for the Entities","Add using reference in DBContext to Entities in Domain"]},{"l":"ADD REPOSITORY INTERFACES TO DOMAIN"},{"l":"ADD REPOSITORIES TO DATA"},{"l":"ADD CONFIGURATIONS FOLDER to API PROJECT"},{"i":"add-connectionstring-to-appsettingsjson","l":"ADD CONNECTIONSTRING TO APPSETTINGS.JSON"},{"l":"ADD APPSETTINGS TO API PROJECT IN CONFIGURATIONS FOLDER"},{"l":"ADD CONFIGUREAPPSETTINGS TO API PROJECT"},{"l":"CONFIGUREAPPSETTINGS CLASS IN CONFIGURATIONS FOLDER"},{"i":"add-addappsettings-to-programcs-in-api-project","l":"ADD AddAppSettings TO PROGRAM.CS IN API PROJECT"},{"l":"ADD DBCONTEXT TO DEPENDANCY INJECTION IN API PROJECT"},{"i":"call-addconnectionprovider-in-configureservices-in-api-projects-startup","l":"CALL ADDCONNECTIONPROVIDER() IN CONFIGURESERVICES IN API PROJECT'S StartUP"},{"i":"remove-onconfiguring-from-dbcontext","l":"REMOVE ONCONFIGURING() FROM DBCONTEXT"},{"i":"remove-the-dbcontext-constructor-wo-a-parameter","l":"REMOVE THE DBCONTEXT CONSTRUCTOR W/O A PARAMETER"},{"i":"remove-classcs-files-from-data-and-domain-projects","l":"REMOVE CLASS.CS FILES FROM DATA AND DOMAIN PROJECTS"}],[{"l":"Developing the API endpoints"},{"i":"start-from-previous-modules-end","l":"START FROM PREVIOUS MODULE'S END","p":["Developing the API Data access"]},{"l":"ADD APIMODELS TO DOMAIN"},{"l":"ADD IConvertModel TO DOMAIN"},{"l":"ADD ConvertExtensions TO DOMAIN"},{"l":"ADD CONVERT CODE APIMODELS IN DOMAIN"},{"l":"ADD CONVERT CODE ENTITIES IN DOMAIN"},{"l":"ADD SUPERVISOR TO DOMAIN","p":["Take a look at the code here for the logic of the Supervisor"]},{"i":"add-appsettings-to--api-project","l":"ADD APPSETTINGS TO API PROJECT"},{"l":"ADD SERVICESCONFIGURATION TO API PROJECT"},{"i":"add-configurerepositories-and-configuresupervisor-to-configureservices-in-api-project","l":"ADD ConfigureRepositories() AND ConfigureSupervisor() TO CONFIGURESERVICES IN API PROJECT"},{"l":"ADD CONTROLLERS TO API"},{"l":"ADD ACTIONS TO CONTROLLERS"},{"l":"ADD LOGGING TO API PROJECT"},{"i":"add-configurerepositories-and-configuresupervisor-to-configureservices-in-api-project-1","l":"ADD ConfigureRepositories() AND ConfigureSupervisor() TO CONFIGURESERVICES IN API PROJECT"},{"l":"CHANGE LAUNCHSETTINGS"}],[{"l":"Developing the Web API Business Rules"},{"i":"start-from-previous-modules-end","l":"START FROM PREVIOUS MODULE'S END","p":["Developing the API endpoints"]},{"i":"add-cross-origin-resource-sharing-cors-to-api-project","l":"ADD CROSS ORIGIN RESOURCE SHARING (CORS) TO API PROJECT"},{"i":"add-addcors-to-servicesconfigurationcs","l":"ADD ADDCORS() TO SERVICESCONFIGURATION.CS","p":["UPDATE STARTUP.CS"]},{"l":"ADD CORS TO CONTROLLERS"},{"l":"ADD FLUENTVALIDATION NUGET TO API AND DOMAIN PROJECTS"},{"l":"ADD VALIDATORS TO DOMAIN PROJECT"},{"l":"ADD VALIDATORS TO DEPENDENCY INJECTION IN STARTUP IN API PROJECT"},{"l":"ADD CONFIGUREVALIDATORS TO CONFIGURESERVICES"},{"l":"GET VALIDATORS FROM DI IN SUPERVISOR"},{"l":"ADD CODE TO CALL VALIDATION IN SUPERVISOR"},{"l":"ADD ERROR HANDLING IN ACTIONS"},{"l":"ERROR HANDLING AND RETURNING PROBLEM DETAILS","p":["For more details look at the Chinook6WebAPI repo in GitHub."]}],[{"l":"Caching Data in Your API"},{"i":"start-from-previous-modules-end","l":"START FROM PREVIOUS MODULE'S END","p":["Developing the Web API Business Rules"]},{"l":"RESPONSE CACHING"},{"i":"add-response-caching-to-addcaching-in-servicesconfigurationcs","l":"ADD RESPONSE CACHING TO ADDCACHING() IN SERVICESCONFIGURATION.CS"},{"i":"add-to-configure-in-startupcs","l":"ADD TO CONFIGURE() IN STARTUP.CS","p":["**** Note: needs to go after CORS**"]},{"l":"ADD TO CONTROLLERS OR ACTIONS","p":["Note: 604800 is seconds and equals a week"]},{"l":"What is seen in the Response Header","p":["Response Header: Cache-Control: public,max-age=604800","Test in Postman and web browser to see how the API Consumer behaves."]},{"l":"IN-MEMORY CACHING"},{"i":"install-microsoftextensionscachingabstractions-nuget-package-to-domain","l":"Install Microsoft.Extensions.Caching.Abstractions NuGet package to Domain"},{"i":"add-in-memory-caching-to-addcaching-in-servicesconfigurationcs","l":"ADD IN-MEMORY CACHING TO ADDCACHING() IN SERVICESCONFIGURATION.CS"},{"l":"ADD MEMORYCACHE TO SUPERVISOR AND GET FROM DI"},{"i":"chinooksupervisorcs","l":"ChinookSupervisor.cs"},{"l":"ADD CODE TO SUPERVISOR FOR EACH ENTITY TYPE NEEDED"},{"i":"chinooksupervisoralbumcs","l":"ChinookSupervisorAlbum.cs"},{"l":"DISTRIBUTED CACHING"},{"l":"Install tool for MSSQL distrubuted caching using the commend in Command Prompt"},{"l":"CREATE NEW EMPTY DATABASE ChinookCacheDb IN MSSQL"},{"l":"Run from Command Prompt"},{"i":"install-microsoftextensionscachingsqlserver-nuget-package-to-domain","l":"Install Microsoft.Extensions.Caching.SqlServer NuGet package to Domain"},{"l":"ADD ChinookSQLCache CONNECTIONSTRING TO APPSETTINGS"},{"i":"add-distributed-caching-to-addcaching-in-servicesconfigurationcs","l":"ADD DISTRIBUTED CACHING TO ADDCACHING() IN SERVICESCONFIGURATION.CS"},{"l":"ADD DISTRIBUTEDCACHE TO SUPERVISOR AND GET FROM DI"},{"i":"chinooksupervisorcs-1","l":"ChinookSupervisor.cs"},{"i":"add-code-to-supervisor-for-each-entity-type-needed-1","l":"ADD CODE TO SUPERVISOR FOR EACH ENTITY TYPE NEEDED"},{"i":"chinooksupervisortrackcs","l":"ChinookSupervisorTrack.cs"}],[{"l":"Versioning your Web API"},{"i":"start-from-previous-modules-end","l":"START FROM PREVIOUS MODULE'S END","p":["Identity in your Web API"]},{"l":"ADD VERSIONING NUGET PACKAGE TO API PROJECT"},{"l":"ADD API VERSIONING TO STARTUP IN API PROJECT"},{"l":"ADD VERSIONING TO ServicesConfiguration IN API PROJECT"},{"i":"servicesconfigurationcs","l":"ServicesConfiguration.cs"},{"l":"ADD NEW CUSTOMER CONTROLLER FOR VERSION 2"},{"l":"MODIFY CUSTOMER V1 CONTROLLER FOR VERSIONING IN API PROJECT"},{"l":"TEST IN POSTMAN"},{"l":"Version 1 Endpoint"},{"l":"Version 2 Endpoint"}],[{"l":"Documenting your API with OpenAPI"},{"i":"start-from-previous-modules-end","l":"START FROM PREVIOUS MODULE'S END","p":["Versioning your Web API"]},{"i":"add-openapiswagger-nuget-packages-to-api-project","l":"ADD OPENAPI/SWAGGER NUGET PACKAGES TO API PROJECT"},{"i":"add-openapiswagger-to-startup-configureservices","l":"ADD OPENAPI/SWAGGER TO STARTUP CONFIGURESERVICES"},{"i":"servicesconfigurationcs","l":"ServicesConfiguration.cs"},{"i":"add-openapiswagger-to-startup","l":"ADD OPENAPI/SWAGGER TO STARTUP"},{"l":"DISCOVER THAT OUR SWAGGER SETUP DOES NOT WORK WITH OUR VERSIONING"},{"i":"decorate-every-version-20-controller-action-endpoint-with-versioning","l":"DECORATE EVERY VERSION 2.0 CONTROLLER ACTION ENDPOINT WITH VERSIONING"},{"l":"INSTALL APIEXPLORER NUGET PACKAGE IN API PROJECT"},{"l":"ADD APIEXPLORER TO SERVICES IN STARTUP"},{"i":"servicesconfigurationcs-1","l":"ServicesConfiguration.cs"},{"i":"add-configureswaggeroptions-and-modify-the-swagger-code-to-document-each-versions-swagger-file","l":"ADD ConfigureSwaggerOptions AND MODIFY THE SWAGGER CODE TO DOCUMENT EACH VERSION'S SWAGGER FILE"},{"i":"servicesconfigurationcs-2","l":"ServicesConfiguration.cs"},{"i":"add-configureswaggeroptions-class-to-servicesconfigurationcs","l":"Add ConfigureSwaggerOptions class to ServicesConfiguration.cs"},{"l":"ADD APIEXPLORER TO STARTUP"},{"i":"change-launchsettingsjson-in-properties-folder-to-launch-swagger-on-run","l":"CHANGE launchSettings.json IN PROPERTIES FOLDER TO LAUNCH SWAGGER ON RUN"},{"l":"SWAGGER FOR V1"},{"l":"SWAGGER FOR V2","p":["NOTE: Solution for versioning issues from @referbruv https://www.referbruv.com/blog/posts/integrating-aspnet-core-api-versions-with-swagger-ui"]}],[{"l":"Creating and using Unit Testing for your API"},{"i":"open-solution-before-paging-module-in-the-testing-module-for-unit-testing","l":"OPEN SOLUTION (BEFORE PAGING MODULE) IN THE TESTING MODULE FOR UNIT TESTING","p":["\\aspnet-7-web-api-workshop\\module-2\\02-01 Creating and using Unit Testing for your Web API\\testing"]},{"i":"explorer-the-chinookaspnetwebapiunittest-project-and-understand-the-tests","l":"EXPLORER THE ChinookASPNETWebAPI.UnitTest PROJECT AND UNDERSTAND THE TESTS","p":["This will give you a good insight into how to create unit tests for different components of your Web API"]},{"l":"CREATE ADDITIONAL UNIT TESTS FOR DATA REPOSITORIES","p":["Using the existing tests for the Album and Artist Data Repositories as a guide, build unit tests for some of the other models in the solution."]},{"l":"CREATE ADDITIONAL UNIT TESTS FOR SUPERVISOR","p":["Using the existing tests for the Album and Artist Supervisor as a guide, build unit tests for some of the other models in the solution."]},{"l":"CREATE ADDITIONAL UNIT TESTS FOR VALIDATORS","p":["Using the existing tests for the Album Validator as a guide, build unit tests for some of the other models in the solution."]},{"l":"CHANGE YOUR COONECTIONSTRING TO MATCH ONE THAT CONNECTS TO CHINOOK DATABASE","p":["Located in the appsettings.json file"]},{"l":"OPEN TEST EXPLORER AND BUILD TO SEE TESTS IN YOUR SOLUTION","p":["Note -- You may need to rebuild your project for the Test Explorer to find the tests"]},{"l":"RUN TESTS"}],[{"l":"Creating and using Integrating Testing for your API"},{"i":"open-solution-before-paging-module-in-the-testing-module-for-integration-testing","l":"OPEN SOLUTION (BEFORE PAGING MODULE) IN THE TESTING MODULE FOR INTEGRATION TESTING","p":["\\aspnet-7-web-api-workshop\\module-2\\02-02 Creating and using Integrating Testing for your Web API\\testing"]},{"i":"explorer-the-chinookaspnetwebapiintegrationtest-project-and-understand-the-tests","l":"EXPLORER THE ChinookASPNETWebAPI.IntegrationTest PROJECT AND UNDERSTAND THE TESTS","p":["This will give you a good insight into how to create unit tests for different components of your Web API"]},{"l":"MODIFY THE PROGRAM FILE IN API PROJECT","p":["If you get an error that testhost.deps.json is missing then add the following to your API project's Program.cs"]},{"l":"CREATE ADDITIONAL INTEGRATION TESTS","p":["Using the existing integration tests for the Album as a guide, build more integration tests for some of the other models in the solution."]},{"l":"CHANGE YOUR COONECTIONSTRING TO MATCH ONE THAT CONNECTS TO CHINOOK DATABASE","p":["Located in the appsettings.json file"]},{"l":"OPEN TEST EXPLORER AND BUILD TO SEE TESTS IN YOUR SOLUTION","p":["Note -- You may need to rebuild your project for the Test Explorer to find the tests"]},{"l":"RUN TESTS"}],[{"i":"consuming-aspnet-web-api-in-net","l":"Consuming ASP.NET Web API in .NET"},{"l":"CREATE NEW CONSOLE PROJECT","p":["ADD the following async method to the Program class"]},{"l":"CREATE NEW STATIC INSTANCE OF HttpClinet"},{"l":"REPLACE MAIN METHOD"},{"l":"ADD API CALL TO ProcessRepositories"}],[{"i":"consuming-aspnet-web-api-in-javascript","l":"Consuming ASP.NET Web API in Javascript"},{"i":"add-lines-to-configure-in-startupcs-in-api-project","l":"ADD LINES TO CONFIGURE IN STARTUP.CS IN API PROJECT"},{"i":"create-a-wwwroot-folder-in-the-project-root","l":"CREATE A WWWROOT FOLDER IN THE PROJECT ROOT."},{"i":"create-a-css-folder-inside-of-the-wwwroot-folder","l":"CREATE A CSS FOLDER INSIDE OF THE WWWROOT FOLDER."},{"i":"create-a-js-folder-inside-of-the-wwwroot-folder","l":"CREATE A JS FOLDER INSIDE OF THE WWWROOT FOLDER."},{"i":"add-an-html-file-named-indexhtml-to-the-wwwroot-folder","l":"ADD AN HTML FILE NAMED INDEX.HTML TO THE WWWROOT FOLDER"},{"i":"add-a-css-file-named-sitecss-to-the-wwwrootcss-folder","l":"ADD A CSS FILE NAMED SITE.CSS TO THE WWWROOT/CSS FOLDER"},{"i":"add-a-javascript-file-named-sitejs-to-the-wwwrootjs-folder","l":"ADD A JAVASCRIPT FILE NAMED SITE.JS TO THE WWWROOT/JS FOLDER"},{"l":"RUN FROM WWWROOT","p":["A change to the ASP.NET Core project's launch settings may be required to test the HTML page locally:","Remove","Remove the launchUrl property to force the app to open at index.html—the project's default file."]},{"l":"RUN API PROJECT"},{"i":"open-new-tab-in-browser-and-open-indexhtml","l":"OPEN NEW TAB IN BROWSER AND OPEN INDEX.HTML"}],[{"i":"consuming-aspnet-web-api-with-openapi-document","l":"Consuming ASP.NET Web API with OpenAPI Document"},{"l":"INSTALL .NET OPENAPI TOOL","p":["Microsoft.dotnet-openapi is a .NET Core Global Tool for managing OpenAPI references within a project."]},{"l":"CREATE NEW CONSOLE PROJECT"},{"l":"GET SWAGGER DOC FROM YOUR WEB APIs"},{"l":"Run your Web API"},{"l":"ADD OPENAPI CONNECTED SERVICE TO PROJECT"},{"l":"WRITE CODE TO USE OPENAPI"}],[{"l":"Identity in your Web API"},{"i":"start-from-previous-modules-end","l":"START FROM PREVIOUS MODULE'S END","p":["Caching Data in Your API"]},{"l":"INSTALL NUGET PACKAGES TO API PROJECT"},{"l":"INSTALL NUGET PACKAGE TO DATA PROJECT"},{"l":"RESTORE UPDATED CHINOOK DB OR ADD IDENTITY TABLES TO EXISTING DB","p":["You can either restore a new database using a BAK file (if using MSSQL 2019) or run a SQL script if using older version of MSSQL."]},{"l":"RESTORING UPDATED CHINOOK DB WITH BAK FILE","p":["Download the Chinook database BAK file for this part of the workshop in the GitHub repo. The file is a backup so we will restore it to where you have MSSQL 2019 installed."]},{"l":"RUN SQL SCRIPT TO ADD IDENTITY TABLES TO EXISTING CHINOOK DB","p":["If you don't have MSSQL 2019 installed you can update your Chinook database by running this SQL script against your database to add the tables needed for Identity for this part of the workshop."]},{"i":"update-our-appsettingsjson-in-api-project","l":"UPDATE OUR APPSETTINGS.JSON IN API PROJECT","p":["Note: Will need to generate your new 32 character string."]},{"l":"CREATE NEW CLASS IN CONFIGURATION FOLDER IN API PROJECT"},{"l":"ADD IDENTITY AND JWT CODE TO STARTUP IN API PROJECT"},{"i":"servicesconfigurationcs","l":"ServicesConfiguration.cs"},{"l":"ADD TO STARTUP CONFIGURE IN API PROJECT","p":["Note: Add to very first line and has to be before app.UseAuthorization();"]},{"l":"ADD NEW CLASSES FOR IDENTITY IN IDENTITY FOLDER IN DOMAIN PROJECT"},{"i":"authresultcs","l":"AuthResult.cs"},{"i":"registermodelcs","l":"RegisterModel.cs"},{"i":"registrationresponsecs","l":"RegistrationResponse.cs"},{"i":"loginmodelcs","l":"LoginModel.cs"},{"l":"UPDATE DBCONTEXT TO DESCEND FROM IDENTITYDBCONTEXT"},{"l":"ADD REGISTER ACTION AND LOGIN ACTION TO HOME CONTROLLER IN API POJECT"},{"l":"CALL IDENTITYDBCONTEXT ONMODELCREATING"},{"l":"AUTHORIZE THE ALBUM CONTROLLER FOR IDENTITY IN API POJECT"},{"l":"TEST IN POSTMAN"},{"l":"Payload for Register Endpoint"},{"l":"Login endpoint in Postman"},{"l":"Results from Album GetAll Endpoint using Identity"}],[{"l":"Formatting Response Data in your API"},{"i":"start-from-previous-modules-end","l":"START FROM PREVIOUS MODULE'S END","p":["Documenting your API with OpenAPI"]},{"l":"Format-specific Action Results"},{"l":"JSON-formatted Data Response"},{"l":"String-formatted Data Response"},{"i":"by-default-aspnet-5-supports-the-following-formats-for-responses","l":"By default, ASP.NET 5 supports the following formats for responses:","p":["application/json","text/json","text/plain"]},{"i":"web-browser--response-formats","l":"Web Browser & Response Formats"},{"i":"when-aspnet-5-web-api-detects-a-browser-calling-an-endpoint-what-happens","l":"When ASP.NET 5 Web API detects a browser calling an endpoint what happens?","p":["The Accept header is ignored.","The content is returned in JSON, unless otherwise configured."]},{"i":"to-configure-an-app-to-honor-browser-accept-headers","l":"To configure an app to honor browser accept headers:"},{"i":"if-no-formatter-is-found-that-can-satisfy-the-clients-request-aspnet-core-will","l":"If no formatter is found that can satisfy the client's request, ASP.NET Core will:","p":["Returns 406 Not Acceptable if MvcOptions.ReturnHttpNotAcceptable is set to true"]},{"l":"Restrict Response Formats"},{"i":"to-restrict-the-response-formats-apply-the-produces-filter-like-most-filters-produces-can-be-applied-at-the-action-controller-or-global-scope","l":"To restrict the response formats, apply the [Produces] filter. Like most Filters, [Produces] can be applied at the action, controller, or global scope:"},{"l":"Response Format URL Mappings"},{"i":"the-mapping-from-request-path-should-be-specified-in-the-route-the-api-is-using-for-example","l":"The mapping from request path should be specified in the route the API is using. For example:","p":["Route","Formatter","/api/Album/5","The default output formatter","/api/Album/5.json","The JSON formatter (if configured)","/api/Album/5.xml","The XML formatter (if configured)"]}],[{"l":"Adding Paging to your API Queries"},{"i":"start-from-previous-modules-end","l":"START FROM PREVIOUS MODULE'S END","p":["Using the PATCH HTTP Request in your API"]},{"i":"add-microsoftentityframeworkcore-nuget-package-to-domain-project","l":"Add Microsoft.EntityFrameworkCore NUGET PACKAGE TO DOMAIN PROJECT"},{"l":"ADD PAGEDLIST CLASS TO YOUR DOMAIN PROJECT"},{"l":"UPDATE DATA REPOSITORY INTERFACES IN DOMAIN PROJECT"},{"l":"UPDATE DATA REPOSITORIES IN DATA PROJECT"},{"l":"UPDATE ICHINOOKSUPERVISOR IN DOMAIN PROJECT"},{"l":"UPDATE CHINOOKSUPERVISOR PARTIAL CLASS FILES IN DOMAIN PROJECT"},{"l":"UPDATE CONTROLLERS IN API PROJECT"}],[{"l":"Using Hypermedia in your API Responses"},{"l":"To be completed at a later date"}],[{"l":"Rate Limiting your API"},{"l":"To be completed at a later date"}]]